---
import HeaderLink from './HeaderLink.astro';
import { Image } from 'astro:assets';
import SJLogo from '@src/assets/img/SJ.jpg';
import GithubWhite from '@src/assets/img/github-mark-white.svg';
import GithubBlack from '@src/assets/img/github-mark.svg';

const menu = [
  { link: '/about/', label: 'about' },
  { link: '/career/', label: 'career' },
  { link: '/projects/', label: 'projects' },
  { link: '/pors/', label: 'pors' },
  { link: '/resources', label: 'resources' }
];
---

<header
  id="site-header"
  class:list={[
    "flex items-center w-full transition duration-300 z-[999] border-[var(--soft-border-color)]"
  ]}
>
  <div class="container">
    {/* 
      1. Change py-3 -> py-2 or py-1 to reduce vertical padding in top bar
    */}
    <nav class="flex gap-4 items-center justify-between py-2">
      <h2 class="m-0">
        <a href="/" class="flex gap-4 items-center text-xl font-black uppercase">
          <Image src={SJLogo} alt="SJ" class="rounded-full w-11 border-white border-2 shadow-lg" />
        </a>
      </h2>
      <div class="flex">
        <a class="p-3 dark:hidden" href="https://github.com/devaradise/jalan-subham" target="_blank">
          <Image src={GithubBlack} width={24} height={24} alt="Github logo" />
        </a>
        <a class="p-3 hidden dark:block" href="https://github.com/jalan-subham" target="_blank">
          <Image src={GithubWhite} width={24} height={24} alt="Github logo" />
        </a>
        {/* Optional theme toggle... */}
      </div>
    </nav>

    {/* 
      2. If you want the “floating” horizontally scrollable nav closer to the top, 
         reduce `top-3 -> top-2` or `top-1`.
      3. Also reduce py-2 -> py-1 in the inner container.
    */}
    <div
      class="
        fixed top-2 left-1/2 -translate-x-1/2
        w-auto max-w-full
        px-3 z-[999]
        overflow-x-auto whitespace-nowrap no-scrollbar
      "
    >
      <div
        class="
          inline-flex items-center
          px-3 py-1  /* smaller vertical padding */
          bg-white/90 dark:bg-zinc-900/75
          backdrop-blur-md leading-tight
          rounded-full border dark:border-zinc-700
        "
      >
        <div class="px-2 text-sm">
          <HeaderLink class="py-2 flex items-center" href="/" aria-label="Home">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="20"
              height="20"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="1.7"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="lucide lucide-house"
            >
              <path d="M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8" />
              <path
                d="M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"
              />
            </svg>
          </HeaderLink>
        </div>
        {
          menu.map((item) => (
            <div class="px-2 text-sm">
              <HeaderLink class="py-2 flex items-center" href={item.link}>
                {item.label}
              </HeaderLink>
            </div>
          ))
        }
      </div>
    </div>
  </div>

  <style is:global>
    /* Hide scrollbars */
    .no-scrollbar::-webkit-scrollbar {
      display: none;
    }
    .no-scrollbar {
      -ms-overflow-style: none;  /* IE & Edge */
      scrollbar-width: none;     /* Firefox */
    }

    /* Theme icons toggle */
    #themeToggle .moon {
      display: none;
    }
    .dark #themeToggle .sun {
      display: none;
    }
    .dark #themeToggle .moon {
      display: block;
    }
  </style>

  <script is:inline>
    // Your theme toggle logic...
    const theme = (() => {
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark';
      }
      if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
        return localStorage.getItem('theme');
      }
      return 'dark';
    })();
    document.documentElement.classList.toggle('dark', theme === 'dark');
    window.localStorage.setItem('theme', theme || '');

    function sendMessage(message) {
      const iframe = document.querySelector('iframe.giscus-frame');
      if (!iframe) return;
      iframe.contentWindow.postMessage({ giscus: message }, 'https://giscus.app');
    }

    const handleToggleClick = () => {
      const html = document.documentElement;
      html.classList.toggle('dark');
      const isDark = html.classList.contains('dark');
    //   sendMessage({ setConfig: { theme: isDark ? 'dark_dimmed' : 'light' } });
	sendMessage({ setConfig: { theme: 'dark_dimmed' } });
    //   localStorage.setItem('theme', isDark ? 'dark' : 'light');
	localStorage.setItem('theme', 'dark');
    };
    document.getElementById('themeToggle')?.addEventListener('click', handleToggleClick);
  </script>
</header>
